/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import LightGLB from './light.glb'

type GLTFResult = GLTF & {
  nodes: {
    Plafon: THREE.Mesh;
    Plafon_Decor: THREE.Mesh;
    Circle015: THREE.Mesh;
    Circle015_1: THREE.Mesh;
    Circle015_2: THREE.Mesh;
    Circle015_3: THREE.Mesh;
    Circle002: THREE.Mesh;
    Plafon_Lenta: THREE.Mesh;
    Metal: THREE.Mesh;
  };
  materials: {
    ["Plafon.001"]: THREE.MeshStandardMaterial;
    ["Plafon Decor"]: THREE.MeshStandardMaterial;
    ["Metal_lampochka.002"]: THREE.MeshStandardMaterial;
    ["glass_architectural.001"]: THREE.MeshStandardMaterial;
    ["glass.001"]: THREE.MeshStandardMaterial;
    ["emission spiral.001"]: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
    ["Plafon Lenta"]: THREE.MeshStandardMaterial;
    Metal_lustra: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(LightGLB) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Plafon"
          castShadow
          receiveShadow
          geometry={nodes.Plafon.geometry}
          material={materials["Plafon.001"]}
          position={[0, 0.38, 0]}
          userData={{ name: "Plafon" }}
        />
        <mesh
          name="Plafon_Decor"
          castShadow
          receiveShadow
          geometry={nodes.Plafon_Decor.geometry}
          material={materials["Plafon Decor"]}
          position={[0, 0.38, 0]}
          userData={{ name: "Plafon Decor" }}
        />
        <group
          name="Lampochki"
          position={[0, 0.35, 0]}
          userData={{ name: "Lampochki" }}
        >
          <mesh
            name="Circle015"
            castShadow
            receiveShadow
            geometry={nodes.Circle015.geometry}
            material={materials["Metal_lampochka.002"]}
          />
          <mesh
            name="Circle015_1"
            castShadow
            receiveShadow
            geometry={nodes.Circle015_1.geometry}
            material={materials["glass_architectural.001"]}
          />
          <mesh
            name="Circle015_2"
            castShadow
            receiveShadow
            geometry={nodes.Circle015_2.geometry}
            material={materials["glass.001"]}
          />
          <mesh
            name="Circle015_3"
            castShadow
            receiveShadow
            geometry={nodes.Circle015_3.geometry}
            material={materials["emission spiral.001"]}
          />
        </group>
        <mesh
          name="Circle002"
          castShadow
          receiveShadow
          geometry={nodes.Circle002.geometry}
          material={materials.glass}
          position={[0, 0.13, 0]}
          userData={{ name: "Circle.002" }}
        />
        <mesh
          name="Plafon_Lenta"
          castShadow
          receiveShadow
          geometry={nodes.Plafon_Lenta.geometry}
          material={materials["Plafon Lenta"]}
          position={[0, 0.38, 0]}
          userData={{ name: "Plafon Lenta" }}
        />
        <mesh
          name="Metal"
          castShadow
          receiveShadow
          geometry={nodes.Metal.geometry}
          material={materials.Metal_lustra}
          position={[0.02, 0.23, 0]}
          userData={{ name: "Metal" }}
        />
      </group>
    </group>
  );
}

useGLTF.preload(LightGLB);
