/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { Suspense, useRef } from "react";
import { OrbitControls, Environment, useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Canvas } from "react-three-fiber";
import TVgLTF from './ledtv.gltf';

type GLTFResult = GLTF & {
  nodes: {
    Display: THREE.Mesh;
    mesh_1: THREE.Mesh;
    mesh_1_1: THREE.Mesh;
    Rectangle002: THREE.Mesh;
    Rectangle001: THREE.Mesh;
    AV: THREE.Mesh;
    Service: THREE.Mesh;
    Antenna: THREE.Mesh;
    mesh_7: THREE.Mesh;
    mesh_7_1: THREE.Mesh;
    AV001: THREE.Mesh;
    mesh_9: THREE.Mesh;
    mesh_9_1: THREE.Mesh;
    AV002: THREE.Mesh;
    WifiSignalIndicator: THREE.Mesh;
    PowerIndicator: THREE.Mesh;
    VolumeDOWN: THREE.Mesh;
    VolumeUp: THREE.Mesh;
    Power: THREE.Mesh;
    Mode: THREE.Mesh;
    Base002: THREE.Mesh;
    Base: THREE.Mesh;
  };
  materials: any;
};

const TVCanvas = () => {
  return (
    <Canvas>
      <Suspense fallback={null}>
        <Model />
        <OrbitControls enableZoom={true} enablePan={true} />
        <Environment preset="city" />
      </Suspense>
    </Canvas>
  );
};

export default TVCanvas;

const Model = (props: JSX.IntrinsicElements["group"]) => {
  const group = useRef<THREE.Group>();
  const { nodes } = useGLTF(TVgLTF) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group
          name="Smart_LED_Television"
          position={[21.2281189, 94.1047821, 89.17932129]}
          rotation={[-Math.PI / 2, 0, -0.01102185]}
          scale={[0.435455, 0.435455, 0.435455]}
          userData={{ name: "Smart LED Television" }}
        >
          <group
            name="TV_Body"
            position={[-383.79376221, -0.19404602, -77.79962158]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.674269}
            userData={{ name: "TV_Body" }}
          >
            <mesh
              name="Display"
              castShadow
              receiveShadow
              geometry={nodes.Display.geometry}
              material={nodes.Display.material}
              position={[0, 137.28137207, -0.00003052]}
              rotation={[-Math.PI, 9e-8, Math.PI / 2]}
              userData={{ name: "Display" }}
            />
            <group
              name="Body"
              position={[0, 137.28137207, -0.00003052]}
              rotation={[-Math.PI, 9e-8, Math.PI / 2]}
              userData={{ name: "Body" }}
            >
              <mesh
                name="mesh_1"
                castShadow
                receiveShadow
                geometry={nodes.mesh_1.geometry}
                material={nodes.mesh_1.material}
              />
              <mesh
                name="mesh_1_1"
                castShadow
                receiveShadow
                geometry={nodes.mesh_1_1.geometry}
                material={nodes.mesh_1_1.material}
              />
            </group>
          </group>
          <group
            name="Support"
            position={[-384.93133545, -0.94050598, -87.62890625]}
            userData={{ name: "Support" }}
          >
            <mesh
              name="Rectangle002"
              castShadow
              receiveShadow
              geometry={nodes.Rectangle002.geometry}
              material={nodes.Rectangle002.material}
              position={[-0.05584717, -124.04141235, -0.35392761]}
              rotation={[Math.PI / 2, Math.PI / 2, 0]}
              userData={{ name: "Rectangle002" }}
            />
            <mesh
              name="Rectangle001"
              castShadow
              receiveShadow
              geometry={nodes.Rectangle001.geometry}
              material={nodes.Rectangle001.material}
              position={[-0.05581665, 124.04138184, 0.35392761]}
              rotation={[Math.PI / 2, Math.PI / 2, 0]}
              userData={{ name: "Rectangle001" }}
            />
          </group>
          <group
            name="Ports"
            position={[419.70178223, 123.57131958, -83.52740479]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[10, 10, 10]}
            userData={{ name: "Ports" }}
          >
            <mesh
              name="AV"
              castShadow
              receiveShadow
              geometry={nodes.AV.geometry}
              material={nodes.AV.material}
              position={[-81.5773468, 7.5714159, 9.8108902]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[0.004368, 0.005479, 0.004345]}
              userData={{ name: "AV" }}
            />
            <mesh
              name="Service"
              castShadow
              receiveShadow
              geometry={nodes.Service.geometry}
              material={nodes.Service.material}
              position={[-81.56837463, 6.24582195, 9.76266289]}
              rotation={[-1.57180953, 0, 0]}
              scale={[0.003135, 0.003135, 0.003135]}
              userData={{ name: "Service" }}
            />
            <mesh
              name="Antenna"
              castShadow
              receiveShadow
              geometry={nodes.Antenna.geometry}
              material={nodes.Antenna.material}
              position={[-81.56820679, 5.87038517, 9.77519226]}
              rotation={[-1.56634057, 0, 0]}
              scale={[0.003596, 0.003596, 0.003596]}
              userData={{ name: "Antenna" }}
            />
            <group
              name="HDMIPORT001"
              position={[-81.56900787, 6.91389179, 9.78736115]}
              rotation={[0.00346849, -1.51304136, 1.57093738]}
              scale={[0.007041, 0.012116, 0.007041]}
              userData={{ name: "HDMIPORT001" }}
            >
              <mesh
                name="mesh_7"
                castShadow
                receiveShadow
                geometry={nodes.mesh_7.geometry}
                material={nodes.mesh_7.material}
              />
              <mesh
                name="mesh_7_1"
                castShadow
                receiveShadow
                geometry={nodes.mesh_7_1.geometry}
                material={nodes.mesh_7_1.material}
              />
            </group>
            <mesh
              name="AV001"
              castShadow
              receiveShadow
              geometry={nodes.AV001.geometry}
              material={nodes.AV001.material}
              position={[-81.57707214, 7.7594614, 9.80854607]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[0.004139, 0.005192, 0.004117]}
              userData={{ name: "AV001" }}
            />
            <group
              name="HDMIPORT002"
              position={[-81.56900787, 6.66255856, 9.78736115]}
              rotation={[0.00346849, -1.51304136, 1.57093738]}
              scale={[0.007041, 0.012116, 0.007041]}
              userData={{ name: "HDMIPORT002" }}
            >
              <mesh
                name="mesh_9"
                castShadow
                receiveShadow
                geometry={nodes.mesh_9.geometry}
                material={nodes.mesh_9.material}
              />
              <mesh
                name="mesh_9_1"
                castShadow
                receiveShadow
                geometry={nodes.mesh_9_1.geometry}
                material={nodes.mesh_9_1.material}
              />
            </group>
            <mesh
              name="AV002"
              castShadow
              receiveShadow
              geometry={nodes.AV002.geometry}
              material={nodes.AV002.material}
              position={[-81.57707214, 7.91452312, 9.80854607]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[0.004139, 0.005192, 0.004117]}
              userData={{ name: "AV002" }}
            />
          </group>
          <group
            name="Indicators"
            position={[-382.58413696, -0.84347534, -92.83240509]}
            userData={{ name: "Indicators" }}
          >
            <mesh
              name="WifiSignalIndicator"
              castShadow
              receiveShadow
              geometry={nodes.WifiSignalIndicator.geometry}
              material={nodes.WifiSignalIndicator.material}
              position={[0.00268555, 3.12799072, -0.86903381]}
              rotation={[Math.PI / 2, Math.PI / 2, 0]}
              scale={0.379416}
              userData={{ name: "WifiSignalIndicator" }}
            />
            <mesh
              name="PowerIndicator"
              castShadow
              receiveShadow
              geometry={nodes.PowerIndicator.geometry}
              material={nodes.PowerIndicator.material}
              position={[-0.05499268, -3.55325317, 0.58646393]}
              rotation={[-2.35619548, 1.55517187, -2.3562546]}
              userData={{ name: "PowerIndicator" }}
            />
          </group>
          <group
            name="Buttons"
            position={[-383.79611206, 172.07275391, -80.1378479]}
            userData={{ name: "Buttons" }}
          >
            <mesh
              name="VolumeDOWN"
              castShadow
              receiveShadow
              geometry={nodes.VolumeDOWN.geometry}
              material={nodes.VolumeDOWN.material}
              position={[0.00003052, -0.33743668, 6.26615906]}
              rotation={[-Math.PI / 2, 1.5e-7, -Math.PI]}
              userData={{ name: "VolumeDOWN" }}
            />
            <mesh
              name="VolumeUp"
              castShadow
              receiveShadow
              geometry={nodes.VolumeUp.geometry}
              material={nodes.VolumeUp.material}
              position={[0.00003052, -0.33743668, 2.08834839]}
              rotation={[-Math.PI / 2, 1.5e-7, -Math.PI]}
              userData={{ name: "VolumeUp" }}
            />
            <mesh
              name="Power"
              castShadow
              receiveShadow
              geometry={nodes.Power.geometry}
              material={nodes.Power.material}
              position={[0.00003052, -0.33743668, -6.26617432]}
              rotation={[-Math.PI / 2, 1.5e-7, -Math.PI]}
              userData={{ name: "Power" }}
            />
            <mesh
              name="Mode"
              castShadow
              receiveShadow
              geometry={nodes.Mode.geometry}
              material={nodes.Mode.material}
              position={[0.00003052, -0.33743668, -2.1030426]}
              rotation={[-Math.PI / 2, 1.5e-7, -Math.PI]}
              userData={{ name: "Mode" }}
            />
          </group>
          <group
            name="Base_Stand"
            position={[-385.61657715, -0.96000671, -108.20435333]}
            userData={{ name: "Base Stand" }}
          >
            <mesh
              name="Base002"
              castShadow
              receiveShadow
              geometry={nodes.Base002.geometry}
              material={nodes.Base002.material}
              position={[-35.28561401, -124.13201904, -14.91114807]}
              scale={[1.529956, 1.176626, 0.88384]}
              userData={{ name: "Base002" }}
            />
            <mesh
              name="Base"
              castShadow
              receiveShadow
              geometry={nodes.Base.geometry}
              material={nodes.Base.material}
              position={[-35.28564453, 124.13198853, -15.14694214]}
              scale={[1.529956, 1.176626, 0.88384]}
              userData={{ name: "Base" }}
            />
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload(TVgLTF);
